// Copyright (c) 2017-2018 Xiamen Yaji Software Co., Ltd.  
// 测试波纹效果
CCEffect %{
  techniques:
  - passes:
    - vert: vs
      frag: fs
      blendState:
        targets:
        - blend: true
      rasterizerState:
        cullMode: none
      properties:
        texture: { value: white }
        
}%


CCProgram vs %{
  precision highp float;

  #include <cc-global>
  #include <cc-local>

  in vec3 a_position;
  in vec4 a_color;
  out vec4 v_color;

  in vec2 a_uv0;
  out vec2 v_uv0;

  void main () {
    vec4 pos = vec4(a_position, 1);

    #if CC_USE_MODEL
    pos = cc_matViewProj * cc_matWorld * pos;
    #else
    pos = cc_matViewProj * pos;
    #endif

    v_uv0 = a_uv0;

    v_color = a_color;

    gl_Position = pos;
  }
}%


CCProgram fs %{
  precision highp float;
  
  #include <alpha-test>
  in vec4 v_color;
  in vec2 v_uv0;
  uniform sampler2D texture;
  uniform ARGS {
    float u_time;
  }
  vec2 s(vec2 p) {
    float d = u_time * 0.4;
    float x = p.x + d;
    float y = p.y + d;
    return vec2(cos(x + y) * cos(y),sin(x + y) * sin(y));
  }
  void main () {
    vec4 black = vec4(0.0,0.0,0.0,1.0);
    // vec2 reverseUV = vec2(v_uv0.y,v_uv0.x);
    float offsetX = sin(u_time*3.0+3.0);
    float offsetY = sin(u_time*3.0+3.0);
    vec2 newUV = s(v_uv0);

    vec4 st = texture2D(texture,newUV);
    
    // vec4 clampRes = clamp(st,0.0,st.a);
    gl_FragColor = st;
  }
}%
